# """
#     The MIT License (MIT)

#     Copyright (c) 2023 pkjmesra

#     Permission is hereby granted, free of charge, to any person obtaining a copy
#     of this software and associated documentation files (the "Software"), to deal
#     in the Software without restriction, including without limitation the rights
#     to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
#     copies of the Software, and to permit persons to whom the Software is
#     furnished to do so, subject to the following conditions:

#     The above copyright notice and this permission notice shall be included in all
#     copies or substantial portions of the Software.

#     THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
#     IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
#     FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
#     AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
#     LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
#     OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
#     SOFTWARE.

# """
name: 9. After-Market Data Gen
on:
  workflow_dispatch:
    inputs:
      name:
        description: 'Run Details'
        required: false
        default: 'Data Download'
      targetPythonVersion:
        description: 'Target Python version: 3.9 , 3.10, 3.11 ?'
        required: false
        type: string
        default: '3.11'

  schedule:
  - cron: '58 9 * * 1-5'

jobs:

  Download_Stock_Data:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
      with:
        ref: actions-data-download

    - name: Set up Python 
      uses: actions/setup-python@v2
      with:
        python-version: ${{ inputs.targetPythonVersion  || 3.11 }}

    - name: Restore Dependencies from Cache
      uses: actions/cache@v2
      with:
        path: ~\AppData\Local\pip\Cache
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install TA-Lib
      shell: bash
      run: |
        python3 -m pip install --upgrade pip
        pip3 install requests
        cd .github/dependencies/
        if [[ "${{ inputs.targetPythonVersion }}" == "" ]] ;then
          pip3 install TA_Lib-0.4.28-cp311-cp311-win_amd64.whl
        elif [[ "${{ inputs.targetPythonVersion }}" == "3.9" ]] ;then
          pip3 install TA_Lib-0.4.19-cp39-cp39-win_amd64.whl
        elif [[ "${{ inputs.targetPythonVersion }}" == "3.11" ]] ;then
          pip3 install TA_Lib-0.4.28-cp311-cp311-win_amd64.whl
        elif [[ "${{ inputs.targetPythonVersion }}" == "3.12" ]] ;then
          pip3 install TA_Lib-0.4.28-cp312-cp312-win_amd64.whl
        fi

    - name: Environment setup to get latest EXE
      shell: cmd
      id: releaseurlsetter
      run: |
        python3 .github/workflows/githubutilities.py -d

    - name: Download latest executable
      shell: cmd
      env:
        exe_path: ${{ steps.releaseurlsetter.outputs.DOWNLOAD_URL }}
      run: |
        curl -o pkscreenercli.exe -JL %exe_path%

    - name: Download Stock Data
      shell: cmd
      run: |
        rmdir /s /q actions-data-download
        mkdir actions-data-download
        pkscreenercli.exe -d -a Y
        copy "stock_data_*.pkl" "actions-data-download"
        pkscreenercli.exe -d -a Y -i 1m
        copy "intraday_stock_data_*.pkl" "actions-data-download"

    - name: Push Pickle Data
      run: |
        git config user.name github-actions
        git config user.email github-actions@github.com
        git config remote.origin.fetch "+refs/heads/*:refs/remotes/origin/*"
        git remote update
        git fetch
        git checkout -b actions-data-download origin/actions-data-download
        git add actions-data-download/stock_data_*.pkl --force
        git add actions-data-download/intraday_stock_data_*.pkl --force
        git commit -m "GitHub-Action-Workflow-Market-Data-Download-(Default-Config)"
        git push -v -u origin +actions-data-download

    - name: Squash Commits (Python)
      shell: cmd
      run: |
        git config user.name github-actions
        git config user.email github-actions@github.com
        git fetch
        git checkout -b actions-data-download origin/actions-data-download
        python3 .github/workflows/squash.py -b actions-data-download -m "GitHub-Action-Workflow-Market-Data-Download-(Default-Config)"

  Delete_Workflow_Run:
    runs-on: ubuntu-20.04
    needs: [Download_Stock_Data]
    name: Delete workflow run
    steps:
      - uses: actions/checkout@v2
        with:
          ref: main
          
      - name: Delete this workflow run
        if: startsWith(runner.os, 'Linux')
        shell: bash
        run: |
          for id in $(gh run list --limit 100 --jq ".[] | select (.status == \"success\" ) | .databaseId" --json databaseId,status); do gh run delete $id; done
          for id in $(gh run list --limit 100 --jq ".[] | select (.status == \"cancelled\" ) | .databaseId" --json databaseId,status); do gh run delete $id; done
          for id in $(gh run list --limit 100 --jq ".[] | select (.status == \"failure\" ) | .databaseId" --json databaseId,status); do gh run delete $id; done
          # Cancel runs queued or in_progress. See https://cli.github.com/manual/gh_run_list
          # for id in $(gh run list -w "13. Backtest for Generic" --limit 100 --jq ".[] | select (.status == \"queued\" ) | .databaseId" --json databaseId,status); do gh run cancel $id; done 
        env:
          GH_TOKEN : ${{secrets.GITHUB_TOKEN}}