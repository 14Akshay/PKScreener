# This workflows will upload a Python Package using Twine when a commit is pushed
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

name: PyPi Publish

on:
  workflow_dispatch:
    inputs:
      name:
        description: 'PyPi Publish'
        required: false
        default: 'PyPi Publish'

jobs:
  deploy:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
      with:
        ref: main

    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - name: Restore Dependencies from Cache
      uses: actions/cache@v2
      with:
        path: ~\AppData\Local\pip\Cache
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install TA-Lib
      run: |
        python -m pip install --upgrade pip
        cd .github/dependencies/
        echo %cd%
        pip install TA_Lib-0.4.19-cp39-cp39-win_amd64.whl

    - name: Install Python Dependencies
      run: |
        pip install -r requirements.txt

    - name: Install setuptools
      run: |
        pip install setuptools wheel twine
    
    - name: Declare env variables
      id: vars
      shell: bash
      run: |
        GITHUB_REF=${GITHUB_REF#refs/tags/}
        echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
        CURRENT_VERSION=`grep -o "'.*'" pkscreener/classes/__init__.py | sed "s/'//g"`
        THIS_VERSION=${CURRENT_VERSION}.${{github.run_number}}
        echo "##[set-output name=THIS_VERSION;]$(echo ${THIS_VERSION})"

    - name: Build and publish distribution ðŸ“¦ to Test PyPI
      env:
        TWINE_USERNAME: ${{ secrets.TESTPYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.TESTPYPI_PASSWORD }}
        repository_url: https://test.pypi.org/legacy/
      run: |
        rmdir /s /q build
        rmdir /s /q dist
        # del /s /q pkscreener/classes/__init__.py
        # echo VERSION='${{ steps.vars.outputs.THIS_VERSION }}' >> pkscreener/classes/__init__.py
        python setup.py clean build install sdist bdist_wheel
        twine upload --repository-url https://test.pypi.org/legacy/ dist/*
    - name: Publish distribution ðŸ“¦ to PyPI
      if: startsWith(github.ref, 'refs/tags')
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        repository_url: https://upload.pypi.org/legacy/
      run: |
        rmdir /s /q build
        rmdir /s /q dist
        # del /s /q pkscreener/classes/__init__.py
        # echo VERSION='${{ steps.vars.outputs.THIS_VERSION }}' >> pkscreener/classes/__init__.py
        python setup.py clean build install sdist bdist_wheel
        twine upload dist/*
    - name: Archive artifacts
      uses: actions/upload-artifact@v2
      with:
        name: wheel-egg-code-tar-${{ steps.vars.outputs.THIS_VERSION }}-${{ steps.vars.outputs.branch }}-${{ steps.vars.outputs.sha_short }}
        path: |
          dist
