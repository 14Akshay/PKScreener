# """
#     The MIT License (MIT)

#     Copyright (c) 2023 pkjmesra

#     Permission is hereby granted, free of charge, to any person obtaining a copy
#     of this software and associated documentation files (the "Software"), to deal
#     in the Software without restriction, including without limitation the rights
#     to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
#     copies of the Software, and to permit persons to whom the Software is
#     furnished to do so, subject to the following conditions:

#     The above copyright notice and this permission notice shall be included in all
#     copies or substantial portions of the Software.

#     THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
#     IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
#     FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
#     AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
#     LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
#     OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
#     SOFTWARE.

# """
name: 8. Generic runner for scan workflows
on:
  workflow_dispatch:
    inputs:
      name:
        description: 'Run Details'
        required: false
        default: 'Data Download'
      ref:
          description: 'ref branch'
          required: false
          default: 'main'
      params:
          description: 'Run parameters'
          required: false
          default: '-a Y -e -o H:'
      user:
          description: 'Telegram user ID'
          required: false
          default: '-1001785195297'
      prerequisites:
          description: 'Run parameters for prerequisites'
          required: false
          default: 'echo Running now'
      postrun:
          description: 'Run parameters for post-run'
          required: false
          default: 'echo Finished running'

jobs:

  Generic_Workflow_Runner:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
      with:
        ref: ${{ inputs.ref }}

    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - name: Restore Dependencies from Cache
      uses: actions/cache@v2
      with:
        path: ~\AppData\Local\pip\Cache
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install TA-Lib
      run: |
        python -m pip install --upgrade pip
        pip install requests
        cd .github/dependencies/
        echo %cd%
        pip install TA_Lib-0.4.19-cp39-cp39-win_amd64.whl

    - name: Environment setup to get latest EXE
      shell: cmd
      id: releaseurlsetter
      run: |
        python .github/workflows/githubutilities.py -d

    - name: Download latest executable
      shell: cmd
      env:
        exe_path: ${{ steps.releaseurlsetter.outputs.DOWNLOAD_URL }}
      run: |
        curl -o pkscreenercli.exe -JL %exe_path%

    - name: Configure env.dev file
      run: |
        python -c "import os; file = open('.env.dev', 'w'); file.write('CHAT_ID='+os.environ['CHAT_ID_PROD']+'\n'); file.write('TOKEN='+os.environ['TOKEN_DEV']+'\n'); file.write('chat_idADMIN='+os.environ['CHAT_IDADMIN_DEV']+'\n'); file.close()"
      shell: bash
      env:
        CHAT_ID_PROD : ${{secrets.CHAT_ID_PROD}}
        TOKEN_DEV : ${{secrets.TOKEN_DEV}}
        CHAT_IDADMIN_DEV : ${{secrets.CHAT_IDADMIN_DEV}}
  
    - name: Run Scan
      shell: cmd
      run: |
        ${{ inputs.prerequisites }}
        pkscreenercli.exe ${{ inputs.params }}
        ${{ inputs.postrun }}
