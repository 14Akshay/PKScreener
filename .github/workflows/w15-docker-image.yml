# """
#     The MIT License (MIT)

#     Copyright (c) 2023 pkjmesra

#     Permission is hereby granted, free of charge, to any person obtaining a copy
#     of this software and associated documentation files (the "Software"), to deal
#     in the Software without restriction, including without limitation the rights
#     to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
#     copies of the Software, and to permit persons to whom the Software is
#     furnished to do so, subject to the following conditions:

#     The above copyright notice and this permission notice shall be included in all
#     copies or substantial portions of the Software.

#     THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
#     IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
#     FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
#     AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
#     LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
#     OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
#     SOFTWARE.

# """
name: 8. Docker Image CI

on:
  workflow_dispatch:
      inputs:
        name:
          description: 'Docker build'
          required: false
          default: 'pkscreener - docker'
  push:
    branches: [ main ]
    tags:
      - '*'

jobs:

  build:

    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v3
      with:
        ref: main

    - name: Setup docker (missing on MacOS)
      if: runner.os == 'macos'
      run: |
        brew install docker
        colima start
        
        # For testcontainers to find the Colima socket
        # https://github.com/abiosoft/colima/blob/main/docs/FAQ.md#cannot-connect-to-the-docker-daemon-at-unixvarrundockersock-is-the-docker-daemon-running
        sudo ln -sf $HOME/.colima/default/docker.sock /var/run/docker.sock

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Publish latest image to Docker Hub
      if: startsWith(github.ref, 'refs/heads/main')
      run: |
        docker build . -f Dockerfile -t pkjmesra/pkscreener:dev-latest --no-cache
        docker push pkjmesra/pkscreener:dev-latest
        
    - name: Publish release version image to Docker Hub
      if: startsWith(github.ref, 'refs/tags')
      run: |
        docker build . -f Dockerfile -t pkjmesra/pkscreener:latest --no-cache
        docker push pkjmesra/pkscreener:latest

  Delete_Workflow_Run:
    runs-on: ubuntu-20.04
    needs: [build]
    name: Delete workflow run
    steps:
      - uses: actions/checkout@v2
        with:
          ref: main
          
      - name: Delete this workflow run
        if: startsWith(runner.os, 'Linux')
        shell: bash
        run: |
          for id in $(gh run list -w "8. Docker Image CI" --limit 100 --jq ".[] | select (.status == \"completed\" ) | .databaseId" --json databaseId,status); do gh run delete $id; done
          # Cancel runs queued or in_progress. See https://cli.github.com/manual/gh_run_list
          # for id in $(gh run list -w "13. Backtest for Generic" --limit 100 --jq ".[] | select (.status == \"queued\" ) | .databaseId" --json databaseId,status); do gh run cancel $id; done 
        env:
          GH_TOKEN : ${{secrets.GITHUB_TOKEN}}