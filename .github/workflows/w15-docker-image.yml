# """
#     The MIT License (MIT)

#     Copyright (c) 2023 pkjmesra

#     Permission is hereby granted, free of charge, to any person obtaining a copy
#     of this software and associated documentation files (the "Software"), to deal
#     in the Software without restriction, including without limitation the rights
#     to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
#     copies of the Software, and to permit persons to whom the Software is
#     furnished to do so, subject to the following conditions:

#     The above copyright notice and this permission notice shall be included in all
#     copies or substantial portions of the Software.

#     THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
#     IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
#     FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
#     AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
#     LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
#     OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
#     SOFTWARE.

# """
name: 8. Docker Image CI

on:
  workflow_dispatch:
      inputs:
        name:
          description: 'Docker build'
          required: false
          default: 'pkscreener - docker'
  # push:
  #   branches: [ main ]
  #   tags:
  #     - '*'

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        ref: main
    - name: Declare env variables
      id: vars
      shell: bash
      run: |
        GITHUB_REF=${GITHUB_REF#refs/tags/}
        echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
        CURRENT_VERSION=`grep -o "'.*'" pkscreener/classes/__init__.py | sed "s/'//g"`
        TODAY=`date +%Y%m%d`
        THIS_VERSION=${CURRENT_VERSION}.${TODAY}.${{github.run_number}}
        rm -rf pkscreener/classes/__init__.py
        echo VERSION=\'`echo ${THIS_VERSION}`\' >> pkscreener/classes/__init__.py
        echo "##[set-output name=THIS_VERSION;]$(echo ${THIS_VERSION})"
        echo "##[set-output name=CURRENT_VERSION;]$(echo ${CURRENT_VERSION})"
    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Publish latest image to Docker Hub
      run: |
        docker build . -f Dockerfile-debian -t pkjmesra/pkscreener-debian:latest --build-arg GIT_RUN_NUMBER=${{github.run_number}} --no-cache
        docker push pkjmesra/pkscreener-debian:latest
        docker build . -f Dockerfile-debian -t pkjmesra/pkscreener-debian:${{ steps.vars.outputs.THIS_VERSION }} --build-arg GIT_RUN_NUMBER=${{github.run_number}} --no-cache
        docker push pkjmesra/pkscreener-debian:${{ steps.vars.outputs.THIS_VERSION }}
    - name: Publish release version image to Docker Hub
      if: startsWith(github.ref, 'refs/tags')
      run: |
        docker build . -f Dockerfile-debian -t pkjmesra/pkscreener-debian:${{ steps.vars.outputs.THIS_VERSION }} --build-arg GIT_RUN_NUMBER=${{github.run_number}} --no-cache
        docker push pkjmesra/pkscreener-debian:${{ steps.vars.outputs.THIS_VERSION }}
